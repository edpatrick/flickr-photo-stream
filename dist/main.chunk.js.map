{"version":3,"sources":["webpack:///./src/components/Image.tsx","webpack:///./src/components/ImagePanel.tsx","webpack:///./src/containers/GalleryContainer.tsx","webpack:///./src/index.tsx"],"names":["Image","props","react","lib_default","a","height","scroll","src","alt","title","ImagePanel","owner","name","description","id","GalleryContainer_GalleryContainer","_super","GalleryContainer","_this","apply","this","arguments","state","photos","__extends","prototype","componentDidMount","axios_default","get","then","response","setState","data","photo","catch","error","console","log","render","images","map","img","ownername","key","url_s","content","Object","react_dom","document","getElementById"],"mappings":"6IAeaA,EAAyC,SAACC,GAGnD,OACIC,EAAA,cAACC,EAAAC,GACGC,OAAQ,IACRC,QAAQ,GAERJ,EAAA,qBAAKK,IAAKN,EAAMM,IAAKC,IAAKP,EAAMQ,UCT/BC,EAA8C,SAACT,GACxD,OACIC,EAAA,yBACIA,EAAA,cAACF,GAAMO,IAAKN,EAAMM,IAAKE,MAAOR,EAAMQ,QACpCP,EAAA,iCAAWD,EAAMQ,OACjBP,EAAA,sCAAgBD,EAAMU,MAAMC,MAC5BV,EAAA,sCAAgBD,EAAMY,aACtBX,EAAA,qCAAe,iCAAiCD,EAAMU,MAAMG,GAAE,oTCc1EC,EAAA,SAAAC,GAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAAAD,YAEWF,EAAAI,OACHC,aAsCR,OAzCsCC,EAAAP,EAAAD,GAM3BC,EAAAQ,UAAAC,kBAAP,eAAAR,EAAAE,KACIO,EAAAvB,EAAMwB,IAAI,mNACLC,KAAK,SAACC,GACHZ,EAAKa,UAAWR,OAAQO,EAASE,KAAKT,OAAOU,UAEhDC,MAAM,SAAAC,GACHC,QAAQC,IAAIF,MAIjBlB,EAAAQ,UAAAa,OAAP,WACIF,QAAQC,IAAIjB,KAAKE,OACjB,IAAMiB,EAASnB,KAAKE,MAAMC,OAAOiB,IAAI,SAACC,GAClC,IAAM9B,GAAUC,KAAM6B,EAAIC,UAAW5B,GAAI2B,EAAI9B,OAE7C,OACIT,EAAA,cAACQ,GACGiC,IAAKF,EAAI3B,GACTA,GAAI2B,EAAI3B,GACRP,IAAKkC,EAAIG,MACTnC,MAAOgC,EAAIhC,MACXE,MAAOA,EACPE,YAAa4B,EAAI5B,YAAYgC,YAIzC,OACI3C,EAAA,mCAEIA,EAAA,yBACKqC,KAKrBtB,EAzCA,CAAsCf,EAAA,kBC/BtC4C,OAAAC,EAAA,OAAAD,CACI5C,EAAA,cAACa,EAAgB,MACjBiC,SAASC,eAAe","file":"main.chunk.js","sourcesContent":["import * as React from \"react\";\nimport LazyLoad from 'react-lazyload';\n\nexport interface IProps {\n    src: string;\n    title: string;\n}\n\n// export default class Image extends React.Component<IProps> {\n\n//     public render(): JSX.Element {\n//         return <img src={this.props.src} alt={this.props.title}/>;\n//     }\n// }\n\nexport const Image: React.FunctionComponent<IProps> = (props: IProps) => {\n    // check for defined / null // onError\n    // Add on error\n    return (\n        <LazyLoad\n            height={240}\n            scroll={true}\n        >\n            <img src={props.src} alt={props.title} />\n        </LazyLoad>\n    );\n}\n\n// export default Image;\n\n// export default Image as React.ComponentType<any>;","import * as React from \"react\";\nimport { Image, IProps as IPropsImage } from \"./Image\";\n\ninterface IOwner {\n    name: string;\n    id: string;\n}\n\nexport interface IProps extends IPropsImage {\n    id: number;\n    owner: IOwner;\n    description: string;\n}\n\nexport const ImagePanel: React.FunctionComponent<IProps> = (props: IProps) => {\n    return (\n        <div>\n            <Image src={props.src} title={props.title} />\n            <p>title: {props.title}</p>\n            <p>owner name: {props.owner.name}</p>\n            <p>owner name: {props.description}</p>\n            <p>owner url: {`https://www.flickr.com/people/${props.owner.id}/`}</p>\n        </div>\n    );\n};","import * as React from \"react\";\nimport axios from \"axios\";\n\nimport { Image } from \"../components/Image\";\nimport { ImagePanel } from \"../components/ImagePanel\";\n\n\n\n// What to lazy load - if have search can lazy load the gallery images\n// const Image = React.lazy(() => import (\"../Components/Image\"));\n// needs default export \n\ninterface IState {\n    photos: any;\n}\n\ninterface IPhotoModel {\n    id: number;\n    title: string;\n}\n\ninterface IPhotosModel {\n    [key: string]: IPhotoModel;\n}\n\ninterface IResponseModel {\n    photos: {\n        page: number;\n        pages: number;\n        perpage: number;\n        photos: IPhotosModel;\n    };\n    stat: string;\n}\n\nexport class GalleryContainer extends React.Component<{}, IState> {\n\n    public state: IState = {\n        photos: [],\n    };\n\n    public componentDidMount() {\n        axios.get(\"https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=3f25176d6dfe7531e3f98c38ddecffc1&text=dogs&safe_search=1&format=json&nojsoncallback=1&per_page=20&extras=owner_name,url_s,description\")\n            .then((response) => {\n                this.setState({ photos: response.data.photos.photo });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    public render(): JSX.Element {\n        console.log(this.state);\n        const images = this.state.photos.map((img: any) => {\n            const owner = { name: img.ownername, id: img.owner };\n            // check img.description is defined\n            return (\n                <ImagePanel\n                    key={img.id}\n                    id={img.id}\n                    src={img.url_s}\n                    title={img.title}\n                    owner={owner}\n                    description={img.description.content}\n                />\n            );\n        });\n        return (\n            <div>\n                Gallery\n                <div>\n                    {images}\n                </div>\n            </div>\n        );\n    }\n}\n","import { GalleryContainer } from \"./containers/GalleryContainer\";\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\n\nrender(\n    <GalleryContainer/>,\n    document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}